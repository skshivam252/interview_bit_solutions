int gcd(int a,int b){
    if(b==0){
        return a;
    }
    return gcd(b,a%b);
}

int Solution::isPower(int A) {
    if(A==1){
        return 1;
    }
    unordered_map <int,int> map;
    while(A%2==0){
        A/=2;
        map[2]++;
    }
    while(A%3==0){
        A/=3;
        map[3]++;
    }
    int x=5;
    while(A>1){
        while(A%x==0){
            map[x]++;
            A/=x;
        }
        while(A%(x+2)==0){
            map[x+2]++;
            A/=(x+2);
        }
        
        x+=6;
    }
    int m=0;
    for(auto i : map){
        if(m==0){
            m=i.second;
        }
        else{
            m=gcd(m,i.second);
        }
    }
    if(m==1){
        return false;
    }
    return true;
}

